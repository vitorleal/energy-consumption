var light = angular.module('light', ['ngRoute', 'light.services', 'light.controllers', 'light.directives']);


//Run
light.run(['$rootScope', '$location', 'Local', function($rootScope, $location, Local) {
  $rootScope.$on('$routeChangeStart', function(event, next, current) {
    var user = Local.get('user');

    if (!next.public && !user) {
      $location.path('login');
    }
  });
}]);


//Confing
light.config(['$httpProvider', '$routeProvider', '$locationProvider',
  function ($httpProvider, $routeProvider, $locationProvider) {

  $httpProvider.interceptors.push('httpInterceptor');

  $routeProvider
    .when('/', {
      templateUrl: 'views/login.html',
      controller : 'Login',
      public     : true
    })
    //Dashboard
    .when('/dashboard', {
      templateUrl: 'views/dashbard.html',
      controller : 'Dashbard',
      public: false,
      resolve: {
        user: ['Local', 'LoginService', function (Local, LoginService) {
          var user = Local.get('user');

          if (user) {
            var login = LoginService.resolve({
              email: user.email,
              pass : user.pass
            });

            return login;
          }
        }]
      }
    })
    //Credit
    .when('/credit', {
      templateUrl: 'views/credit.html',
      controller : 'Credit',
      public: false,
      resolve: {
        user: ['Local', 'LoginService', function (Local, LoginService) {
          var user = Local.get('user');

          if (user) {
            var login = LoginService.resolve({
              email: user.email,
              pass : user.pass
            });

            return login;
          }
        }]
      }
    })
    //Credit
    .when('/debit', {
      templateUrl: 'views/debit.html',
      controller : 'Debit',
      public: false,
      resolve: {
        user: ['Local', 'LoginService', function (Local, LoginService) {
          var user = Local.get('user');

          if (user) {
            var login = LoginService.resolve({
              email: user.email,
              pass : user.pass
            });

            return login;
          }
        }]
      }
    })
    .otherwise({ redirectTo: '/' });
}]);

var controllers = angular.module('light.controllers', ['ngDialog']);

//Loing
controllers.controller('Login', ['Local', 'ngDialog', '$scope', '$location', 'LoginService',
  function (Local, ngDialog, $scope, $location, LoginService) {

  $scope.login = function () {
    LoginService.send({
      email: $scope.email,
      pass : $scope.pass
    })
    .success(function (data) {
      if (data.error) {
        $scope.error = data.error;

        ngDialog.open({
          template: 'views/include/error.html',
          scope   : $scope
        });

      } else {
        Local.set('user', data);
        $location.path('dashboard');
      }
    });
  };
}]);


//Dashboard
controllers.controller('Dashbard', ['user' , 'HistoryService', '$scope', '$location',
  function (user, HistoryService, $scope, $location) {

  $scope.user = user;

  HistoryService.get({ email: $scope.user.email })
  .success(function (data) {
    $scope.history = data.history;
  });

  $scope.goToCredit = function () {
    $location.path('credit');
  };

  $scope.goToDebit = function () {
    $location.path('debit');
  };
}]);


//Buy Credit
controllers.controller('Credit', ['user', 'ngDialog', '$scope', '$location',
    function (user, ngDialog, $scope, $location) {

  $scope.user = user;

  $scope.buy = function () {
    if (!$scope.credit) {
      $scope.error = 'Selecione um valor para recarregar';

      ngDialog.open({
        template: 'views/include/error.html',
        scope   : $scope
      });

    } else {
      ngDialog.open({
        template  : 'views/include/credit-card.html',
        controller: 'CreditCard',
        scope     : $scope
      });
    }
  };

  $scope.goBack = function () {
    $location.path('dashboard');
  };
}]);


//CreditCard
controllers.controller('CreditCard', ['CreditService', '$scope', '$location',
    function (CreditService, $scope, $location) {

  $scope.buy = function () {
    CreditService.update({
      balance: $scope.user.balance,
      email  : $scope.user.email,
      credit : $scope.credit
    })
    .success(function () {
      $scope.closeThisDialog();
      $location.path('dashboard');
    });
  };

  $scope.goBack = function () {
    $scope.closeThisDialog();
    $location.path('credit');
  };
}]);


//Debit Credit
controllers.controller('Debit', ['user', 'DebitService', 'HistoryService', '$scope', '$location',
    function (user, DebitService, HistoryService, $scope, $location) {

  $scope.user = user;

  $scope.debit = function () {
    DebitService.send({
      email  : $scope.user.email,
      balance: $scope.user.balance,
      kwh    : $scope.user.kwh
    })
    .success(function () {
      $location.path('dashboard');
    });
  };

  $scope.reset = function() {
    HistoryService.reset({
      email: $scope.user.email
    })
    .success(function () {
      $location.path('dashboard');
    });
  };

  $scope.goBack = function () {
    $location.path('dashboard');
  };
}]);

var directives = angular.module('light.directives', []);

directives.directive('loader', ['$rootScope', function ($rootScope) {
  return {
    restrict: 'E',
    link: function (scope, element, attrs) {
      scope.$on('loader:show', function () {
        return element.show();
      });

      return scope.$on('loader:hide', function () {
        return element.hide();
      });
    }
  };
}]);

var services = angular.module('light.services', []);

//Login factory
services.factory('LoginService', ['$http', '$rootScope', 'Local',
    function ($http, $rootScope, Local) {

  var path    = '/login',
      factory = {};

  //Login
  factory.send = function (data) {
    var login = $http.post(path, data);

    return login;
  };

  //Login resolved
  factory.resolve = function (data) {
    var login = $http.post(path, data).then(function (resp) {
      var data = resp.data;

      Local.set('user', data);
      $rootScope.user = data;

      return data;
    });

    return login;
  };

  return factory;
}]);


//Credit factory
services.factory('CreditService', ['$http', function ($http) {
  var path    = '/credit',
      factory = {};

  //Update credit
  factory.update = function (data) {
    var credit = $http.post(path, data);

    return credit;
  };

  return factory;
}]);


//Debit factory
services.factory('DebitService', ['$http', function ($http) {
  var path    = '/debit',
      factory = {};

  //Debit credit
  factory.send = function (data) {
    var debit = $http.post(path, data);

    return debit;
  };

  return factory;
}]);


//Debit factory
services.factory('HistoryService', ['$http', function ($http) {
  var path      = '/history',
      pathReset = '/reset',
      factory   = {};

  //History
  factory.get = function (data) {
    var history = $http.post(path, data);

    return history;
  };

  //Reset user history
  factory.reset = function (data) {
    var reset = $http.post(pathReset, data);

    return reset;
  };

  return factory;
}]);


//Local
services.factory('Local', ['$rootScope', function ($rootScope) {
  var factory = {};

  factory.set = function (name, value) {
   localStorage.setItem(name, JSON.stringify(value));
  };

  factory.get = function (name) {
    var local = localStorage.getItem(name);

    return JSON.parse(local);
  };

  return factory;
}]);


//Loader
services.factory('httpInterceptor', ['$q', '$rootScope', function ($q, $rootScope) {
  var numLoadings = 0;

  return {
    request: function (config) {
      numLoadings++;
      $rootScope.$broadcast("loader:show");

      return config || $q.when(config);
    },
    response: function (response) {
      if ((--numLoadings) === 0) {
        $rootScope.$broadcast("loader:hide");
      }

      return response || $q.when(response);
    },
    responseError: function (response) {
      if (!(--numLoadings)) {
        $rootScope.$broadcast("loader:hide");
      }

      return $q.reject(response);
    }
  };
}]);
